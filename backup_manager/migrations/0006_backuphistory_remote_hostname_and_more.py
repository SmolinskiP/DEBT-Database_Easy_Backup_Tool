# Generated by Django 5.2.1 on 2025-05-13 12:28

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backup_manager', '0005_backuphistory_description'),
    ]

    operations = [
        migrations.AddField(
            model_name='backuphistory',
            name='remote_hostname',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='backuphistory',
            name='remote_key_file',
            field=models.FileField(blank=True, null=True, upload_to='remote_keys/'),
        ),
        migrations.AddField(
            model_name='backuphistory',
            name='remote_password',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='backuphistory',
            name='remote_path',
            field=models.CharField(blank=True, help_text='Path on remote server where backups will be stored', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='backuphistory',
            name='remote_port',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='backuphistory',
            name='remote_username',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='backuphistory',
            name='storage_type',
            field=models.CharField(choices=[('local', 'Local Storage'), ('ftp', 'FTP Server'), ('sftp', 'SFTP Server')], default='local', max_length=10),
        ),
        migrations.AlterField(
            model_name='backuphistory',
            name='description',
            field=models.TextField(blank=True, help_text='Operation description or additional information'),
        ),
        migrations.AlterField(
            model_name='backuphistory',
            name='status',
            field=models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('pending', 'In progress')], default='pending', max_length=10),
        ),
        migrations.AlterField(
            model_name='backuptask',
            name='day_of_month',
            field=models.IntegerField(blank=True, help_text='Day of month (1-31)', null=True),
        ),
        migrations.AlterField(
            model_name='backuptask',
            name='day_of_week',
            field=models.IntegerField(blank=True, choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], null=True),
        ),
        migrations.AlterField(
            model_name='backuptask',
            name='frequency',
            field=models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('custom', 'Custom')], max_length=10),
        ),
        migrations.AlterField(
            model_name='backuptask',
            name='retain_count',
            field=models.IntegerField(default=10, help_text='Number of recent backups to keep'),
        ),
        migrations.AlterField(
            model_name='backuptask',
            name='time',
            field=models.TimeField(help_text='Execution time (HH:MM)'),
        ),
        migrations.AlterField(
            model_name='databaseserver',
            name='database_name',
            field=models.CharField(blank=True, help_text='Specific database to backup. Leave empty for all databases.', max_length=100, null=True),
        ),
    ]
