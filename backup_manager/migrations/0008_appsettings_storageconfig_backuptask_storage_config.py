# Generated by Django 5.2.1 on 2025-05-14 07:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backup_manager', '0007_remove_backuphistory_remote_hostname_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, unique=True)),
                ('value', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='StorageConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('storage_type', models.CharField(choices=[('local', 'Local Storage'), ('ftp', 'FTP Server'), ('sftp', 'SFTP Server')], default='local', max_length=10)),
                ('is_default', models.BooleanField(default=False)),
                ('hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('path', models.CharField(blank=True, help_text='Path on remote server where backups will be stored', max_length=255, null=True)),
                ('key_file', models.FileField(blank=True, null=True, upload_to='storage_keys/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='backuptask',
            name='storage_config',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backup_manager.storageconfig'),
        ),
    ]
